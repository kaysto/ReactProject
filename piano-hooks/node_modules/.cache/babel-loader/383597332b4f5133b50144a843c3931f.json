{"ast":null,"code":"import _toConsumableArray from\"/Users/kaycistone/Desktop/react-project/ReactProject/piano-hooks/node_modules/@babel/runtime/helpers/esm/toConsumableArray\";import _objectSpread from\"/Users/kaycistone/Desktop/react-project/ReactProject/piano-hooks/node_modules/@babel/runtime/helpers/esm/objectSpread2\";import _slicedToArray from\"/Users/kaycistone/Desktop/react-project/ReactProject/piano-hooks/node_modules/@babel/runtime/helpers/esm/slicedToArray\";import React,{Fragment,useState,useEffect}from\"react\";import isAccidentalNote from\"./utils/isAccidentalNote\";import{getKeyboardShortcutsForNote}from\"./utils/getKeyboardShortcutsForNote\";import InstrumentAudio from\"./src/Keyboard/InstrumentAudio\";import getNotesBetween from\"./utils/getNotesBetween\";import{jsx as _jsx}from\"react/jsx-runtime\";import{jsxs as _jsxs}from\"react/jsx-runtime\";var isRegularKey=function isRegularKey(event){return!event.ctrlKey&&!event.metaKey&&!event.shiftKey;};var Instrument=function Instrument(_ref){var instrumentName=_ref.instrumentName,startNote=_ref.startNote,endNote=_ref.endNote,renderPianoKey=_ref.renderPianoKey,keyboardMap=_ref.keyboardMap;var notes=getNotesBetween(startNote,endNote);var _useState=useState({notesPlaying:[]}),_useState2=_slicedToArray(_useState,2),state=_useState2[0],setState=_useState2[1];useEffect(function(){window.addEventListener(\"keydown\",handleKeyDown);window.addEventListener(\"keyup\",handleKeyUp);},[]);var getNoteFromKeyboardKey=function getNoteFromKeyboardKey(keyboardKey){return keyboardMap[keyboardKey.toUpperCase()];};var handleKeyDown=function handleKeyDown(e){if(isRegularKey(e)&&!e.repeat){var note=getNoteFromKeyboardKey(e.key);if(note){setState(_objectSpread(_objectSpread({},state),{},{notesPlaying:[].concat(_toConsumableArray(state.notesPlaying),[note])}));}}};var handleKeyUp=function handleKeyUp(e){if(isRegularKey(e)&&!e.repeat){var note=getNoteFromKeyboardKey(e.key);if(note){setState(_objectSpread(_objectSpread({},state),{},{notesPlaying:state.notesPlaying.filter(function(notePlaying){return notePlaying!==note;})}));}}};var onPlayNoteStart=function onPlayNoteStart(note){setState(_objectSpread(_objectSpread({},state),{},{notesPlaying:[].concat(_toConsumableArray(state.notesPlaying),[note])}));};var onPlayNoteEnd=function onPlayNoteEnd(note){setState(_objectSpread(_objectSpread({},state),{},{notesPlaying:state.notesPlaying.filter(function(notePlaying){return notePlaying!==note;})}));};//rendering piano keys\nreturn/*#__PURE__*/_jsxs(Fragment,{children:[notes.map(function(note){return/*#__PURE__*/_jsx(Fragment,{children:renderPianoKey({note:note,isAccidentalNote:isAccidentalNote(note),isNotePlaying:state.notesPlaying.includes(note),startPlayingNote:function startPlayingNote(){return onPlayNoteStart(note);},stopPlayingNote:function stopPlayingNote(){return onPlayNoteEnd(note);},keyboardShortcut:getKeyboardShortcutsForNote(keyboardMap,note)})},note);}),/*#__PURE__*/_jsx(InstrumentAudio,{instrumentName:instrumentName,notes:state.notesPlaying})]});};export default Instrument;","map":{"version":3,"sources":["/Users/kaycistone/Desktop/react-project/ReactProject/piano-hooks/src/Instrument.js"],"names":["React","Fragment","useState","useEffect","isAccidentalNote","getKeyboardShortcutsForNote","InstrumentAudio","getNotesBetween","isRegularKey","event","ctrlKey","metaKey","shiftKey","Instrument","instrumentName","startNote","endNote","renderPianoKey","keyboardMap","notes","notesPlaying","state","setState","window","addEventListener","handleKeyDown","handleKeyUp","getNoteFromKeyboardKey","keyboardKey","toUpperCase","e","repeat","note","key","filter","notePlaying","onPlayNoteStart","onPlayNoteEnd","map","isNotePlaying","includes","startPlayingNote","stopPlayingNote","keyboardShortcut"],"mappings":"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","sourcesContent":["import React, { Fragment, useState, useEffect } from \"react\";\nimport isAccidentalNote from \"./utils/isAccidentalNote\";\nimport { getKeyboardShortcutsForNote } from \"./utils/getKeyboardShortcutsForNote\";\nimport InstrumentAudio from \"./src/Keyboard/InstrumentAudio\";\nimport getNotesBetween from \"./utils/getNotesBetween\";\n\nconst isRegularKey = event => {\n  return !event.ctrlKey && !event.metaKey && !event.shiftKey;\n};\nconst Instrument = ({\n  instrumentName,\n  startNote,\n  endNote,\n  renderPianoKey,\n  keyboardMap\n}) => {\n  const notes = getNotesBetween(startNote, endNote);\n\n  const [state, setState] = useState({\n    notesPlaying: []\n  });\n\n  useEffect(() => {\n    window.addEventListener(\"keydown\", handleKeyDown);\n    window.addEventListener(\"keyup\", handleKeyUp);\n  }, []);\n\n  const getNoteFromKeyboardKey = keyboardKey => {\n    return keyboardMap[keyboardKey.toUpperCase()];\n  };\n\n  const handleKeyDown = e => {\n    if (isRegularKey(e) && !e.repeat) {\n      const note = getNoteFromKeyboardKey(e.key);\n      if (note) {\n        setState({ ...state, notesPlaying: [...state.notesPlaying, note] });\n      }\n    }\n  };\n\n  const handleKeyUp = e => {\n    if (isRegularKey(e) && !e.repeat) {\n      const note = getNoteFromKeyboardKey(e.key);\n      if (note) {\n        setState({\n          ...state,\n          notesPlaying: state.notesPlaying.filter(\n            notePlaying => notePlaying !== note\n          )\n        });\n      }\n    }\n  };\n\n  const onPlayNoteStart = note => {\n    setState({ ...state, notesPlaying: [...state.notesPlaying, note] });\n  };\n\n  const onPlayNoteEnd = note => {\n    setState({\n      ...state,\n      notesPlaying: state.notesPlaying.filter(\n        notePlaying => notePlaying !== note\n      )\n    });\n  };\n\n  //rendering piano keys\n  return (\n    <Fragment>\n      {notes.map(note => {\n        return (\n          <Fragment key={note}>\n            {renderPianoKey({\n              note,\n              isAccidentalNote: isAccidentalNote(note),\n              isNotePlaying: state.notesPlaying.includes(note),\n              startPlayingNote: () => onPlayNoteStart(note),\n              stopPlayingNote: () => onPlayNoteEnd(note),\n              keyboardShortcut: getKeyboardShortcutsForNote(keyboardMap, note)\n            })}\n          </Fragment>\n        );\n      })}\n\n      <InstrumentAudio\n        instrumentName={instrumentName}\n        notes={state.notesPlaying}\n      />\n    </Fragment>\n  );\n};\n\nexport default Instrument;\n"]},"metadata":{},"sourceType":"module"}
{"version":3,"sources":["constants/note.js","utils/isAccidentalNote.js","utils/getKeyboardShortcutsForNote.js","Keyboard/AudioContext.js","Keyboard/AudioPlayer.js","Keyboard/InstrumentAudio.js","Instrument.js","utils/getNotesBetween.js","Piano.js","App.js","serviceWorker.js","index.js"],"names":["TONES","OCTAVE_NUMBERS","reduce","notes","octaveNumber","notesInOctave","map","tone","note","NOTES","includes","getKeyboardShortcutsForNote","keyboardMap","Object","keys","filter","shortcut","window","NullSoundFontPlayerNoteAudio","stop","NullSoundFontPlayer","play","AudioPlayer","audioContext","AudioContext","soundPlayer","setInstrument","instrumentName","SoundFontPlayer","instrument","then","soundfontPlayer","catch","e","playNote","InstrumentAudio","useState","instrumentPlayer","setInstrumentPlayer","useEffect","playNotes","length","isRegularKey","event","ctrlKey","metaKey","shiftKey","Instrument","startNote","endNote","renderPianoKey","startingIndex","indexOf","endingIndex","slice","getNotesBetween","notesPlaying","state","setState","addEventListener","handleKeyDown","handleKeyUp","getNoteFromKeyboardKey","keyboardKey","toUpperCase","repeat","key","notePlaying","isAccidentalNote","isNotePlaying","startPlayingNote","onPlayNoteStart","stopPlayingNote","onPlayNoteEnd","keyboardShortcut","Piano","accidentalKey","isPlaying","text","eventHandlers","className","naturalKey","KeyComponent","onMouseDown","onMouseUp","onTouchStart","onMouseOut","onTouchEnd","join","Q","2","W","3","E","R","5","T","6","Y","7","U","I","9","O","0","P","Z","S","X","D","C","F","V","B","H","N","J","M","L","A","App","Boolean","location","hostname","match","ReactDOM","render","document","getElementById","navigator","serviceWorker","ready","registration","unregister"],"mappings":"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","file":"static/js/main.e5241cfe.chunk.js","sourcesContent":["const TONES = ['C', 'C#', 'D', 'D#', 'E', 'F', 'F#', 'G', 'G#', 'A', 'A#', 'B'];\nconst OCTAVE_NUMBERS = [1, 2, 3, 4, 5, 6, 7];\n\nexport default OCTAVE_NUMBERS.reduce((notes, octaveNumber) => {\n  const notesInOctave = TONES.map(tone => `${tone}${octaveNumber}`);\n  return [...notes, ...notesInOctave];\n}, []);","import NOTES from '../constants/note'\nexport default (note) => {\n    return NOTES.includes(note) && note.includes('#')\n}","export const  getKeyboardShortcutsForNote = (keyboardMap, note) => {\n    const keyboardShortcuts = Object.keys(keyboardMap);\n    return keyboardShortcuts.filter(shortcut => keyboardMap[shortcut] === note);\n  }","export default window.AudioContext;\n","import SoundFontPlayer from \"soundfont-player\";\nimport AudioContext from \"./AudioContext\";\n\nconst NullSoundFontPlayerNoteAudio = {\n  stop() {}\n};\n\nconst NullSoundFontPlayer = {\n  play() {\n    return NullSoundFontPlayerNoteAudio;\n  }\n};\nconst AudioPlayer = () => {\n  //Audio Context\n  const audioContext = AudioContext && new AudioContext();\n\n  //soundPlayer\n  let soundPlayer = NullSoundFontPlayer;\n  //setInstrument\n  const Player = {\n    setInstrument(instrumentName) {\n      SoundFontPlayer.instrument(audioContext, instrumentName)\n        .then(soundfontPlayer => {\n          soundPlayer = soundfontPlayer;\n        })\n        .catch(e => {\n          soundPlayer = NullSoundFontPlayer;\n        });\n    },\n    playNote(note) {\n      soundPlayer.play(note);\n    }\n  };\n  return Player;\n};\n\nexport default AudioPlayer;\n","import React, { useEffect, useState } from \"react\";\nimport AudioPlayer from \"./AudioPlayer\";\n\nconst InstrumentAudio = ({ instrumentName, notes }) => {\n  const [instrumentPlayer, setInstrumentPlayer] = useState(null);\n  useEffect(() => {\n    setInstrumentPlayer(AudioPlayer());\n  }, []);\n\n  useEffect(() => {\n    if (instrumentPlayer) {\n      setInstrument();\n      playNotes();\n    }\n  }, [instrumentPlayer]);\n\n  useEffect(() => {\n    if (notes && notes.length > 0) {\n      playNotes();\n    }\n  }, [notes]);\n\n  const setInstrument = () => {\n    instrumentPlayer.setInstrument(instrumentName);\n  };\n\n  const playNotes = () => {\n    if (instrumentPlayer) {\n      instrumentPlayer.playNote(notes[0]);\n    }\n  };\n\n  return null;\n};\n\nexport default InstrumentAudio;","import React, { Fragment, useState, useEffect } from \"react\";\nimport isAccidentalNote from \"./utils/isAccidentalNote\";\nimport { getKeyboardShortcutsForNote } from \"./utils/getKeyboardShortcutsForNote\";\nimport InstrumentAudio from \"./Keyboard/InstrumentAudio\";\nimport getNotesBetween from \"./utils/getNotesBetween\";\n\nconst isRegularKey = event => {\n  return !event.ctrlKey && !event.metaKey && !event.shiftKey;\n};\nconst Instrument = ({\n  instrumentName,\n  startNote,\n  endNote,\n  renderPianoKey,\n  keyboardMap\n}) => {\n  const notes = getNotesBetween(startNote, endNote);\n\n  const [state, setState] = useState({\n    notesPlaying: []\n  });\n\n  useEffect(() => {\n    window.addEventListener(\"keydown\", handleKeyDown);\n    window.addEventListener(\"keyup\", handleKeyUp);\n  }, []);\n\n  const getNoteFromKeyboardKey = keyboardKey => {\n    return keyboardMap[keyboardKey.toUpperCase()];\n  };\n\n  const handleKeyDown = e => {\n    if (isRegularKey(e) && !e.repeat) {\n      const note = getNoteFromKeyboardKey(e.key);\n      if (note) {\n        setState({ ...state, notesPlaying: [...state.notesPlaying, note] });\n      }\n    }\n  };\n\n  const handleKeyUp = e => {\n    if (isRegularKey(e) && !e.repeat) {\n      const note = getNoteFromKeyboardKey(e.key);\n      if (note) {\n        setState({\n          ...state,\n          notesPlaying: state.notesPlaying.filter(\n            notePlaying => notePlaying !== note\n          )\n        });\n      }\n    }\n  };\n\n  const onPlayNoteStart = note => {\n    setState({ ...state, notesPlaying: [...state.notesPlaying, note] });\n  };\n\n  const onPlayNoteEnd = note => {\n    setState({\n      ...state,\n      notesPlaying: state.notesPlaying.filter(\n        notePlaying => notePlaying !== note\n      )\n    });\n  };\n\n  //rendering piano keys\n  return (\n    <Fragment>\n      {notes.map(note => {\n        return (\n          <Fragment key={note}>\n            {renderPianoKey({\n              note,\n              isAccidentalNote: isAccidentalNote(note),\n              isNotePlaying: state.notesPlaying.includes(note),\n              startPlayingNote: () => onPlayNoteStart(note),\n              stopPlayingNote: () => onPlayNoteEnd(note),\n              keyboardShortcut: getKeyboardShortcutsForNote(keyboardMap, note)\n            })}\n          </Fragment>\n        );\n      })}\n\n      <InstrumentAudio\n        instrumentName={instrumentName}\n        notes={state.notesPlaying}\n      />\n    </Fragment>\n  );\n};\n\nexport default Instrument;\n","import NOTES from \"../constants/note\";\n\nexport default function getNotesBetween(startNote, endNote) {\n  const startingIndex = NOTES.indexOf(startNote);\n  const endingIndex = NOTES.indexOf(endNote);\n  return NOTES.slice(startingIndex, endingIndex + 1);\n}\n","import React, { Fragment } from \"react\";\nimport Instrument from \"./Instrument\";\n\nconst Piano = () => {\n  const accidentalKey = ({ isPlaying, text, eventHandlers }) => {\n    return (\n      <div className=\"piano-accidental-key-wrapper\">\n        <button\n          className={`piano-accidental-key ${\n            isPlaying ? \"piano-accidental-key-playing\" : \"\"\n          } `}\n          {...eventHandlers}\n        >\n          <div className=\"piano-text\">{text}</div>\n        </button>\n      </div>\n    );\n  };\n\n  const naturalKey = ({ isPlaying, text, eventHandlers }) => {\n    return (\n      <button\n        className={`piano-natural-key ${\n          isPlaying ? \"piano-natural-key-playing\" : \"\"\n        } `}\n        {...eventHandlers}\n      >\n        <div className=\"piano-text\">{text}</div>\n      </button>\n    );\n  };\n\n  const renderPianoKey = ({\n    isAccidentalNote,\n    isNotePlaying,\n    startPlayingNote,\n    stopPlayingNote,\n    keyboardShortcut\n  }) => {\n    const KeyComponent = isAccidentalNote ? accidentalKey : naturalKey;\n\n    const eventHandlers = {\n      onMouseDown: startPlayingNote,\n      onMouseUp: stopPlayingNote,\n      onTouchStart: startPlayingNote,\n      onMouseOut: stopPlayingNote,\n      onTouchEnd: stopPlayingNote\n    };\n\n    return (\n      <KeyComponent\n        isPlaying={isNotePlaying}\n        text={keyboardShortcut.join(\"/\")}\n        eventHandlers={eventHandlers}\n      />\n    );\n  };\n\n  return (\n    <div className=\"piano-container\">\n      <Instrument\n        instrumentName={\"acoustic_grand_piano\"}\n        startNote={\"C3\"}\n        endNote={\"B5\"}\n        renderPianoKey={renderPianoKey}\n        keyboardMap={{\n          Q: \"C3\",\n          2: \"C#3\",\n          W: \"D3\",\n          3: \"D#3\",\n          E: \"E3\",\n          R: \"F3\",\n          5: \"F#3\",\n          T: \"G3\",\n          6: \"G#3\",\n          Y: \"A3\",\n          7: \"A#3\",\n          U: \"B3\",\n          I: \"C4\",\n          9: \"C#4\",\n          O: \"D4\",\n          0: \"D#4\",\n          P: \"E4\",\n          Z: \"F4\",\n          S: \"F#4\",\n          X: \"G4\",\n          D: \"G#4\",\n          C: \"A4\",\n          F: \"A#4\",\n          V: \"B4\",\n          B: \"C5\",\n          H: \"C#5\",\n          N: \"D5\",\n          J: \"D#5\",\n          M: \"E5\",\n          \",\": \"F5\",\n          L: \"F#5\",\n          \".\": \"G5\",\n          \";\": \"G#5\",\n          \"/\": \"A5\",\n          \"'\": \"A#5\",\n          A: \"B5\"\n        }}\n      />\n    </div>\n  );\n};\n\nexport default Piano;","import React, { useEffect, useState } from \"react\";\nimport \"./App.css\";\nimport Piano from \"./Piano\";\nfunction App() {\n  return (\n    <div className=\"app-container\">\n      <Piano />\n    </div>\n  );\n}\n\nexport default App;\n","const isLocalhost = Boolean(\n    window.location.hostname === 'localhost' ||\n      \n      window.location.hostname === '[::1]' ||\n      \n      window.location.hostname.match(\n        /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n      )\n  );\n  \n  export function register(config) {\n    if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    \n      const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n      if (publicUrl.origin !== window.location.origin) {\n        \n        return;\n      }\n  \n      window.addEventListener('load', () => {\n        const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n  \n        if (isLocalhost) {\n          checkValidServiceWorker(swUrl, config);\n  \n          \n          navigator.serviceWorker.ready.then(() => {\n            console.log(\n              'This web app is being served cache-first by a service ' +\n                'worker. To learn more, visit https://bit.ly/CRA-PWA'\n            );\n          });\n        } else {\n          \n          registerValidSW(swUrl, config);\n        }\n      });\n    }\n  }\n  \n  function registerValidSW(swUrl, config) {\n    navigator.serviceWorker\n      .register(swUrl)\n      .then(registration => {\n        registration.onupdatefound = () => {\n          const installingWorker = registration.installing;\n          if (installingWorker == null) {\n            return;\n          }\n          installingWorker.onstatechange = () => {\n            if (installingWorker.state === 'installed') {\n              if (navigator.serviceWorker.controller) {\n               \n                console.log(\n                  'New content is available and will be used when all ' +\n                    'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n                );\n  \n                \n                if (config && config.onUpdate) {\n                  config.onUpdate(registration);\n                }\n              } else {\n            \n                console.log('Content is cached for offline use.');\n  \n                \n                if (config && config.onSuccess) {\n                  config.onSuccess(registration);\n                }\n              }\n            }\n          };\n        };\n      })\n      .catch(error => {\n        console.error('Error during service worker registration:', error);\n      });\n  }\n  \n  function checkValidServiceWorker(swUrl, config) {\n    \n    fetch(swUrl, {\n      headers: { 'Service-Worker': 'script' }\n    })\n      .then(response => {\n        const contentType = response.headers.get('content-type');\n        if (\n          response.status === 404 ||\n          (contentType != null && contentType.indexOf('javascript') === -1)\n        ) {\n         \n          navigator.serviceWorker.ready.then(registration => {\n            registration.unregister().then(() => {\n              window.location.reload();\n            });\n          });\n        } else {\n       \n          registerValidSW(swUrl, config);\n        }\n      })\n      .catch(() => {\n        console.log(\n          'No internet connection found. App is running in offline mode.'\n        );\n      });\n  }\n  \n  export function unregister() {\n    if ('serviceWorker' in navigator) {\n      navigator.serviceWorker.ready.then(registration => {\n        registration.unregister();\n      });\n    }\n  }","import React from 'react';\nimport ReactDOM from 'react-dom';\n\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\nserviceWorker.unregister();\n"],"sourceRoot":""}